// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"crossword/internal/database"
	"crossword/internal/database/repositories"
	services2 "crossword/internal/services"
	"crossword/internal/services/interfaces"
)

// Injectors from wire.go:

// InitializeUserService sets up the dependency injection for UserServiceI.
func InitUserService() (services.UserServiceI, error) {
	db, err := database.ProvideDB()
	if err != nil {
		return nil, err
	}
	userRepositoryI := repositories.NewUserRepository(db)
	userServiceI := services2.NewUserService(userRepositoryI)
	return userServiceI, nil
}

// InitializeCategoryService sets up the dependency injection for CategoryServiceI.
func InitCategoryService() (services.CategoryServiceI, error) {
	db, err := database.ProvideDB()
	if err != nil {
		return nil, err
	}
	categoryRepositoryI := repositories.NewCategoryRepository(db)
	categoryServiceI := services2.NewCategoryService(categoryRepositoryI)
	return categoryServiceI, nil
}
